class TextType{constructor(t,e={}){this.element=t,this.options={text:e.text||[],typingSpeed:e.typingSpeed||50,initialDelay:e.initialDelay||0,pauseDuration:e.pauseDuration||2e3,deletingSpeed:e.deletingSpeed||30,loop:void 0===e.loop||e.loop,showCursor:void 0===e.showCursor||e.showCursor,hideCursorWhileTyping:e.hideCursorWhileTyping||!1,cursorCharacter:e.cursorCharacter||"|",cursorBlinkDuration:e.cursorBlinkDuration||.5,textColors:e.textColors||[],variableSpeed:e.variableSpeed||null,onSentenceComplete:e.onSentenceComplete||null,startOnVisible:e.startOnVisible||!1,reverseMode:e.reverseMode||!1},this.displayedText="",this.currentCharIndex=0,this.isDeleting=!1,this.currentTextIndex=0,this.isVisible=!this.options.startOnVisible,this.timeout=null,this.cursorInterval=null,this.observer=null,this.textArray=Array.isArray(this.options.text)?this.options.text:[this.options.text],this.init()}init(){this.contentSpan=document.createElement("span"),this.contentSpan.className="text-type__content",this.options.showCursor&&(this.cursorSpan=document.createElement("span"),this.cursorSpan.className="text-type__cursor",this.cursorSpan.textContent=this.options.cursorCharacter),this.element.innerHTML="",this.element.appendChild(this.contentSpan),this.options.showCursor&&this.element.appendChild(this.cursorSpan),this.options.showCursor&&this.startCursorBlink(),this.options.startOnVisible?this.setupIntersectionObserver():this.startTyping()}setupIntersectionObserver(){this.observer=new IntersectionObserver(t=>{t.forEach(t=>{t.isIntersecting&&!this.isVisible&&(this.isVisible=!0,this.startTyping())})},{threshold:.1}),this.observer.observe(this.element)}startCursorBlink(){let t=!0;var e=1e3*this.options.cursorBlinkDuration;this.cursorInterval=setInterval(()=>{this.cursorSpan&&(this.cursorSpan.style.opacity=t?"0":"1",t=!t)},e)}getRandomSpeed(){var t,e;return this.options.variableSpeed?({min:t,max:e}=this.options.variableSpeed,Math.random()*(e-t)+t):this.options.typingSpeed}getCurrentTextColor(){return 0===this.options.textColors.length?null:this.options.textColors[this.currentTextIndex%this.options.textColors.length]}updateDisplay(){this.contentSpan.textContent=this.displayedText;var t=this.getCurrentTextColor();t&&(this.contentSpan.style.color=t),this.options.showCursor&&this.options.hideCursorWhileTyping&&(t=this.currentCharIndex<this.textArray[this.currentTextIndex].length||this.isDeleting,this.cursorSpan.style.display=t?"none":"inline-block")}startTyping(){if(this.isVisible){let e=()=>{var t=this.textArray[this.currentTextIndex],t=this.options.reverseMode?t.split("").reverse().join(""):t;this.isDeleting?""===this.displayedText?(this.isDeleting=!1,this.currentTextIndex===this.textArray.length-1&&!this.options.loop||(this.options.onSentenceComplete&&this.options.onSentenceComplete(this.textArray[this.currentTextIndex],this.currentTextIndex),this.currentTextIndex=(this.currentTextIndex+1)%this.textArray.length,this.currentCharIndex=0,this.timeout=setTimeout(()=>{e()},this.options.pauseDuration))):(this.displayedText=this.displayedText.slice(0,-1),this.updateDisplay(),this.timeout=setTimeout(()=>{e()},this.options.deletingSpeed)):this.currentCharIndex<t.length?(this.displayedText+=t[this.currentCharIndex],this.currentCharIndex++,this.updateDisplay(),t=this.options.variableSpeed?this.getRandomSpeed():this.options.typingSpeed,this.timeout=setTimeout(()=>{e()},t)):1<this.textArray.length&&(this.timeout=setTimeout(()=>{this.isDeleting=!0,e()},this.options.pauseDuration))};this.timeout=setTimeout(()=>{e()},this.options.initialDelay)}}destroy(){this.timeout&&clearTimeout(this.timeout),this.cursorInterval&&clearInterval(this.cursorInterval),this.observer&&this.observer.disconnect()}updateText(t){this.textArray=Array.isArray(t)?t:[t],this.reset()}reset(){this.displayedText="",this.currentCharIndex=0,this.isDeleting=!1,this.currentTextIndex=0,this.updateDisplay(),this.timeout&&clearTimeout(this.timeout),this.startTyping()}pause(){this.timeout&&clearTimeout(this.timeout)}resume(){this.startTyping()}}"undefined"!=typeof module&&module.exports&&(module.exports=TextType);